//==============================================================================
//
// The code is generated by Intel Compiler for SystemC, version 1.5.15
// see more information at https://github.com/intel/systemc-compiler
//
//==============================================================================

//==============================================================================
//
// Module: alu ()
//
module tt_um_alu // "tb.dut_inst"
  (
   input wire [7:0]  ui_in,
   output wire [7:0] uo_out,
   input wire [7:0]  uio_in,
   output wire [7:0] uio_out,
   output wire [7:0] uio_oe,
   input wire        ena,
   input wire        clk,
   input wire        rst_n
   );

   //------------------------------------------------------------------------------
   // Method process: process (alu.cpp:22:5)

   wire [3:0]        a = ui_in[3:0];
   wire [3:0]        b = ui_in[7:4];
   wire [2:0]        opcode = uio_in[2:0];
   reg [3:0]         z;

   assign uo_out[3:0] = z;
   assign uo_out[7:4] = 4'b0000;
   assign uio_oe[7:0] = 8'b00000000;
   assign uio_out[7:0] = 8'b00000000;

   always_comb
     begin : process     // alu.cpp:22:5
        case (32'(opcode))
          0 : begin
             z = signed'({1'b0, 32'(a)}) + signed'({1'b0, 32'(b)});
          end
          1 : begin
             z = signed'({1'b0, 32'(a)}) * signed'({1'b0, 32'(b)});
          end
          2 : begin
             z = signed'({1'b0, 32'(a)}) & signed'({1'b0, 32'(b)});
          end
          3 : begin
             z = 32'(a) <<< 32'(b);
          end
          4 : begin
             z = 32'(a) >>> 32'(b);
          end
          5 : begin
             z = (signed'({1'b0, 32'(a)}) < signed'({1'b0, 32'(b)})) ? 1 : 0;
          end
          default : begin
             z = 0;
          end
        endcase
     end

endmodule
